
/*==============================================================================*/
/* Casper generated Fri Oct 07 2016 23:59:20 GMT-0400 (Eastern Daylight Time) */
/*==============================================================================*/

var x = require('casper').selectXPath;
ERROR: the recorded sequence does not start with a url openning.
   casper.waitForSelector(x("//a[normalize-space(text())='crowe.will@gmail.com']"),
       function success() {
           test.assertExists(x("//a[normalize-space(text())='crowe.will@gmail.com']"));
           this.click(x("//a[normalize-space(text())='crowe.will@gmail.com']"));
       },
       function fail() {
           test.assertExists(x("//a[normalize-space(text())='crowe.will@gmail.com']"));
   });
   casper.waitForSelector(x("//a[normalize-space(text())='help pages']"),
       function success() {
           test.assertExists(x("//a[normalize-space(text())='help pages']"));
           this.click(x("//a[normalize-space(text())='help pages']"));
       },
       function fail() {
           test.assertExists(x("//a[normalize-space(text())='help pages']"));
   });
   casper.waitForSelector(x("//a[normalize-space(text())='safety']"),
       function success() {
           test.assertExists(x("//a[normalize-space(text())='safety']"));
           this.click(x("//a[normalize-space(text())='safety']"));
       },
       function fail() {
           test.assertExists(x("//a[normalize-space(text())='safety']"));
   });

   casper.run(function() {test.done();});
});


/*==============================================================================*/
/* Casper generated Fri Oct 07 2016 23:58:32 GMT-0400 (Eastern Daylight Time) */
/*==============================================================================*/

var x = require('casper').selectXPath;
ERROR: the recorded sequence does not start with a url openning.
   casper.waitForSelector(x("//a[normalize-space(text())='crowe.will@gmail.com']"),
       function success() {
           test.assertExists(x("//a[normalize-space(text())='crowe.will@gmail.com']"));
           this.click(x("//a[normalize-space(text())='crowe.will@gmail.com']"));
       },
       function fail() {
           test.assertExists(x("//a[normalize-space(text())='crowe.will@gmail.com']"));
   });
   casper.waitForSelector(x("//a[normalize-space(text())='help pages']"),
       function success() {
           test.assertExists(x("//a[normalize-space(text())='help pages']"));
           this.click(x("//a[normalize-space(text())='help pages']"));
       },
       function fail() {
           test.assertExists(x("//a[normalize-space(text())='help pages']"));
   });
   casper.then(function() {
       this.mouse.down(1914, 143);
       this.mouse.move(1868, 1170);
       this.mouse.up(1868, 1170);
   });
   casper.then(function() {
       this.mouse.down(1913, 812);
       this.mouse.move(1913, 894);
       this.mouse.up(1913, 894);
   });
   casper.waitForSelector(x("//a[normalize-space(text())='safety']"),
       function success() {
           test.assertExists(x("//a[normalize-space(text())='safety']"));
           this.click(x("//a[normalize-space(text())='safety']"));
       },
       function fail() {
           test.assertExists(x("//a[normalize-space(text())='safety']"));
   });

   casper.run(function() {test.done();});
});